# -*-coding:utf-8 -*-
import matplotlib
import matplotlib.pyplot as plt
from pylab import mpl

myfont = matplotlib.font_manager.FontProperties(fname='simsun.ttf')
mpl.rcParams['axes.unicode_minus'] = False

x_time = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
          30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
          57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
          84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108,
          109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
          131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
          153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
          175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
          197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
          219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
          241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262,
          263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284,
          285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
          307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328,
          329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350,
          351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372,
          373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394,
          395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
          417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
          439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
          461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
          483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
          505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
          527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
          549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
          571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
          593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
          615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
          637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
          659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
          681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
          703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
          725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
          747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
          769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
          791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812,
          813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
          835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853]
y_nova_docker = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 8, 9, 9, 10, 10, 10, 11, 11,
                 12, 12, 13, 13, 14, 14, 15, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 19, 20, 20, 21, 21, 21, 22, 23, 23,
                 23, 24, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 30, 31, 31, 32, 32, 33, 33, 33, 34, 34,
                 35, 35, 36, 36, 37, 37, 37, 38, 38, 39, 39, 40, 40, 41, 41, 41, 42, 42, 43, 43, 44, 44, 44, 45, 45, 46,
                 46, 47, 47, 48, 48, 49, 49, 49, 50, 50, 51, 51, 51, 52, 52, 53, 53, 54, 54, 55, 55, 55, 56, 56, 57, 57,
                 58, 58, 58, 59, 59, 60, 60, 61, 61, 62, 62, 63, 63, 63, 64, 64, 65, 65, 65, 66, 66, 67, 67, 68, 68, 69,
                 69, 70, 70, 71, 71, 71, 71, 72, 72, 73, 73, 74, 74, 75, 75, 76, 76, 76, 77, 77, 78, 78, 78, 79, 79, 80,
                 80, 81, 81, 82, 82, 83, 83, 83, 84, 84, 85, 85, 85, 86, 86, 87, 87, 88, 88, 89, 89, 89, 90, 90, 91, 91,
                 91, 92, 92, 93, 93, 94, 94, 95, 95, 95, 95, 96, 96, 97, 98, 98, 98, 99, 99, 100, 100, 101, 101, 101,
                 102, 102, 103, 103, 103, 104, 104, 105, 105, 105, 106, 106, 107, 107, 108, 108, 108, 109, 109, 110,
                 110, 111, 111, 112, 112, 112, 113, 113, 114, 114, 114, 115, 115, 116, 116, 117, 117, 117, 118, 118,
                 119, 119, 119, 120, 120, 121, 121, 122, 122, 122, 123, 123, 124, 124, 125, 125, 125, 126, 126, 127,
                 127, 127, 128, 128, 129, 129, 130, 130, 131, 131, 131, 132, 132, 133, 133, 134, 134, 135, 135, 135,
                 136, 136, 137, 137, 138, 138, 138, 139, 139, 139, 140, 140, 140, 141, 142, 142, 142, 142, 143, 143,
                 144, 144, 145, 145, 145, 146, 146, 146, 147, 148, 148, 148, 149, 149, 150, 150, 150, 150, 151, 151,
                 152, 153, 153, 153, 153, 154, 154, 155, 155, 156, 156, 156, 156, 157, 157, 157, 157, 159, 159, 159,
                 159, 159, 160, 160, 161, 161, 162, 162, 163, 164, 164, 164, 165, 165, 165, 165, 166, 166, 167, 167,
                 167, 168, 169, 169, 169, 170, 170, 170, 171, 171, 171, 172, 173, 173, 173, 174, 174, 174, 174, 175,
                 175, 176, 176, 176, 176, 176, 178, 178, 178, 178, 178, 179, 179, 179, 180, 180, 180, 180, 181, 181,
                 181, 182, 182, 183, 183, 183, 183, 184, 184, 184, 186, 186, 186, 186, 186, 186, 187, 187, 187, 188,
                 188, 189, 189, 189, 191, 191, 191, 192, 192, 192, 193, 193, 193, 193, 194, 194, 194, 194, 194, 194,
                 194, 194, 194, 194, 194, 194, 197, 198, 198, 198, 198, 200, 200, 200, 202, 202, 202, 202, 203, 203,
                 203, 203, 203, 203, 203, 204, 204, 204, 205, 205, 205, 205, 205, 205, 208, 208, 208, 209, 209, 210,
                 210, 210, 210, 210, 210, 210, 210, 212, 212, 212, 212, 212, 214, 214, 214, 214, 214, 215, 216, 216,
                 216, 217, 217, 217, 218, 218, 218, 218, 219, 219, 221, 221, 221, 221, 222, 222, 222, 222, 222, 223,
                 223, 223, 223, 223, 223, 223, 223, 224, 224, 225, 228, 228, 228, 228, 229, 229, 229, 229, 229, 230,
                 230, 231, 231, 231, 232, 233, 233, 233, 233, 233, 233, 233, 234, 234, 234, 234, 234, 234, 234, 234,
                 234, 234, 234, 234, 234, 235, 237, 238, 240, 241, 241, 241, 242, 242, 242, 243, 244, 244, 244, 244,
                 244, 244, 244, 244, 244, 244, 244, 245, 245, 245, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
                 248, 248, 248, 248, 251, 251, 251, 251, 251, 251, 251, 251, 251, 254, 254, 254, 254, 254, 254, 255,
                 255, 256, 256, 256, 256, 256, 257, 257, 257, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
                 258, 258, 258, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 265, 265, 266, 267, 267, 267, 267,
                 267, 267, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 269, 269, 269, 269, 269, 269, 270, 270,
                 270, 270, 270, 270, 270, 270, 274, 274, 274, 275, 275, 275, 275, 275, 275, 277, 277, 277, 278, 278,
                 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 280, 280, 280, 280, 281, 282, 282,
                 282, 284, 285, 285, 285, 285, 285, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
                 288, 288, 288, 288, 288, 288, 288, 288, 290, 291, 291, 291, 291, 291, 293, 293, 293, 293, 294, 294,
                 294, 295, 298, 298, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
                 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
                 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300]
y_yun = [0, 0, 0, 0, 0, 1, 2, 4, 5, 5, 5, 7, 9, 10, 10, 10, 12, 13, 15, 15, 15, 15, 18, 20, 20, 20, 20, 23, 24, 25, 25,
         25, 25, 28, 30, 30, 30, 30, 30, 33, 35, 35, 35, 35, 36, 40, 40, 40, 40, 40, 40, 43, 45, 45, 45, 45, 47, 50, 50,
         50, 50, 50, 52, 55, 55, 55, 55, 56, 58, 60, 60, 60, 60, 62, 63, 65, 65, 65, 66, 68, 70, 70, 70, 70, 71, 73, 75,
         75, 75, 76, 78, 80, 80, 80, 81, 82, 83, 85, 85, 85, 87, 88, 89, 90, 90, 91, 92, 93, 95, 95, 96, 97, 98, 98,
         100, 100, 101, 102, 103, 105, 105, 106, 107, 108, 108, 110, 110, 112, 112, 113, 113, 115, 115, 117, 117, 118,
         119, 120, 121, 122, 123, 123, 125, 125, 127, 127, 128, 129, 130, 130, 132, 133, 133, 135, 135, 135, 137, 138,
         140, 140, 140, 140, 143, 143, 145, 145, 145, 146, 148, 149, 150, 150, 150, 152, 153, 155, 155, 155, 156, 158,
         159, 160, 160, 160, 162, 164, 165, 165, 165, 165, 168, 169, 170, 170, 170, 170, 174, 175, 175, 175, 175, 175,
         177, 180, 180, 180, 180, 181, 183, 185, 185, 185, 185, 187, 190, 190, 190, 190, 191, 193, 195, 195, 195, 195,
         195, 198, 200, 200, 200, 200, 200, 203, 205, 205, 205, 205, 206, 208, 210, 210, 210, 210, 211, 213, 215, 215,
         215, 215, 216, 219, 220, 220, 220, 220, 221, 222, 225, 225, 225, 226, 227, 227, 230, 230, 230, 231, 232, 232,
         235, 235, 235, 237, 237, 237, 240, 240, 240, 242, 242, 242, 245, 245, 246, 247, 247, 248, 250, 250, 252, 252,
         252, 253, 254, 255, 257, 257, 257, 258, 259, 261, 262, 262, 262, 264, 265, 266, 267, 267, 267, 268, 270, 272,
         272, 272, 272, 274, 276, 277, 277, 277, 277, 279, 281, 282, 282, 282, 283, 285, 287, 287, 287, 287, 288, 289,
         292, 292, 292, 293, 294, 294, 297, 297, 298, 298, 299, 299, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
         300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300]

# nova-docker
plt.plot(x_time, y_nova_docker, color="red", label="Nova-docker", linewidth=1)
# 在标签处打点
plt.scatter([803, ], [300, ], 30, color='red')
# 打标签
# plt.annotate(u'$803s$',
#              xy=(803, 300), xycoords='data',
#              xytext=(+10, -30), textcoords='offset points', fontsize=8,
#              arrowprops=dict(arrowstyle="->", connectionstyle="arc3,rad=.2"))
# 在标签处画竖线
plt.plot([803, 803], [0, 300], color='red', linewidth=0.5, linestyle="--")
plt.annotate(u'$\mathbf{803}$',
             xy=(803, 0), xycoords='data',
             xytext=(17, -5), textcoords='offset points', fontsize=8, color='red',
             horizontalalignment='center', verticalalignment='top')

# yun
plt.plot(x_time, y_yun, color="blue", label="Yun", linewidth=1, linestyle="-.")
# 在标签处打点
plt.scatter([346, ], [300, ], 30, color='blue')
# 打标签
# plt.annotate(u'$346s$',
#              xy=(346, 300), xycoords='data',
#              xytext=(+10, -30), textcoords='offset points', fontsize=8,
#              arrowprops=dict(arrowstyle="->", connectionstyle="arc3,rad=.2"))
# 在标签处画竖线
plt.plot([346, 346], [0, 300], color='blue', linewidth=0.5, linestyle="--")
plt.annotate(u'$\mathbf{346}$',
             xy=(346, 0), xycoords='data',
             xytext=(2, -5), textcoords='offset points', fontsize=8, color='blue',
             horizontalalignment='center', verticalalignment='top')

# 设置图例
plt.legend(fontsize=8)

# 设置x, y的范围
plt.axis([0, 900, 0, 325])
# plt.axis('image')
plt.xlim(0, 900)
plt.ylim(0, 325)

# 网格线
plt.grid(linestyle='--', linewidth=0.5)

plt.xlabel(u'时间（秒）', fontproperties=myfont, fontsize=14)
plt.ylabel(u'容器数量', fontproperties=myfont, fontsize=14)
# plt.savefig("4-5 Nova-docker与Yun部署效率对比.pdf", format="pdf", bbox_inches='tight', pad_inches=0.05)
plt.savefig("4-5 Nova-docker与Yun部署效率对比.svg", format="svg", bbox_inches='tight', pad_inches=0.05)
plt.show()
